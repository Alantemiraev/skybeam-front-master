name: Deploy to preprod
on:
    push:
        branches: [ master ]

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  OCR_USER: ${{ secrets.OCR_USER }}
  OCR_PASSWORD: ${{ secrets.OCR_PASSWORD }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  TAG: ${{ github.run_number }}
  CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
  APP_PORT: ${{ secrets.APP_PORT }}
  HOST: ${{ secrets.PREPROD_HOST }}
  USER: ${{ secrets.PREPROD_USER }}
  PORT: ${{ secrets.PREPROD_PORT }}
  SSH_KEY: ${{ secrets.PREPROD_SSH_PRIVATE_KEY }}
  API: ${{ secrets.PREPROD_NUXT_PUBLIC_HOST }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - run: echo 'Login to OCR'
      - run: echo '${{ env.OCR_PASSWORD }}' | docker login  --username ${{ env.OCR_USER }} --password-stdin ${{ env.REGISTRY }}
      - run: docker build --build-arg NUXT_PUBLIC_API_HOST=${{ env.API }} -t ${{ env.IMAGE_NAME }} .
      - run: docker tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
      - run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: fifsky/ssh-action@master
        with:
          command: |
            echo 'Login to OCR'
            echo '${{ env.OCR_PASSWORD }}' | docker login  --username ${{ env.OCR_USER }} --password-stdin ${{ env.REGISTRY }}
            docker stop ${{ env.CONTAINER_NAME }}
            docker rm ${{ env.CONTAINER_NAME }}
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            docker run -d -p ${{ env.APP_PORT }}:3000 \
              --restart always \
              --name ${{ env.CONTAINER_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          host: ${{ env.HOST }}
          user: ${{ env.USER }}
          port: ${{ env.PORT }}
          key: ${{ env.SSH_KEY }}
          args: "-tt -vvv"
